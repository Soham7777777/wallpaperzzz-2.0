# Generated by Django 5.1.6 on 2025-03-11 05:06

import adminapp.fields
import adminapp.models
import common.utils
import common.validators
import django.core.validators
import django.db.models.deletion
import django.db.models.manager
import pathlib
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^(?!.*\\s{2,})[A-Za-z]+(?: [A-Za-z]+)*$', 'Ensure that the name contains only English letters or spaces, with no leading or trailing spaces and no consecutive spaces.')])),
                ('description', models.TextField(max_length=512, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(512)])),
                ('thumbnail', models.ImageField(unique=True, upload_to=common.utils.FileUploadPathGenerator(pathlib.PurePosixPath('category_thumbnails'), 'thumbnail'), validators=[common.validators.MaxFileSizeValidator(1048576), common.validators.ImageFormatAndFileExtensionsValidator((common.utils.ImageFormat['PNG'], common.utils.ImageFormat['JPEG'], common.utils.ImageFormat['WEBP']))], verbose_name='auto_delete_fileauto_delete_old_file')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SettingsStore',
            fields=[
                ('key', models.CharField(max_length=64, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[A-Z]+(?:_[A-Z]+)*$', 'Ensure that the key contains only uppercase English letters or underscores, with no leading or trailing underscores and no consecutive underscores.')])),
                ('maximum_image_file_size', models.PositiveIntegerField(default=5120, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10240)])),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('settings', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WallpaperTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^(?!.*\\s{2,})[A-Za-z]+(?: [A-Za-z]+)*$', 'Ensure that the name contains only English letters or spaces, with no leading or trailing spaces and no consecutive spaces.')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WallpaperDimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', adminapp.fields.WallpaperDimensionField()),
                ('height', adminapp.fields.WallpaperDimensionField()),
            ],
            options={
                'abstract': False,
                'constraints': [models.UniqueConstraint(fields=('width', 'height'), name='unique_width_height')],
            },
        ),
        migrations.CreateModel(
            name='WallpaperGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^(?!.*\\s{2,})[A-Za-z]+(?: [A-Za-z]+)*$', 'Ensure that the name contains only English letters or spaces, with no leading or trailing spaces and no consecutive spaces.')])),
                ('description', models.TextField(max_length=512, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(512)])),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallpaper_groups', to='adminapp.category')),
                ('tags', models.ManyToManyField(related_name='wallpaper_groups', to='adminapp.wallpapertag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallpaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(unique=True, upload_to=common.utils.FileUploadPathGenerator(pathlib.PurePosixPath('wallpapers'), 'wallpaper'), validators=[adminapp.models.validate_image_max_file_size, common.validators.ImageFormatAndFileExtensionsValidator((common.utils.ImageFormat['JPEG'],))], verbose_name='auto_delete_fileauto_delete_old_file')),
                ('thumbnail', models.ImageField(unique=True, upload_to=common.utils.FileUploadPathGenerator(pathlib.PurePosixPath('wallpapers'), 'thumbnail'), validators=[common.validators.MaxFileSizeValidator(20480), common.validators.ImageFormatAndFileExtensionsValidator((common.utils.ImageFormat['WEBP'],))], verbose_name='auto_delete_fileauto_delete_old_file')),
                ('dummy', models.ImageField(unique=True, upload_to=common.utils.FileUploadPathGenerator(pathlib.PurePosixPath('wallpapers'), 'dummy'), validators=[common.validators.MaxFileSizeValidator(102400), common.validators.ImageFormatAndFileExtensionsValidator((common.utils.ImageFormat['WEBP'],))], verbose_name='auto_delete_fileauto_delete_old_file')),
                ('dimension', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallpapers', to='adminapp.wallpaperdimension')),
                ('wallpaper_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallpapers', to='adminapp.wallpapergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
