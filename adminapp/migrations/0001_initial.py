# Generated by Django 5.1.6 on 2025-02-25 17:32

import adminapp.fields
import common.utils
import common.validators
import django.core.validators
import pathlib
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^(?!.*\\s{2,})[A-Za-z]+(?: [A-Za-z]+)*$', 'Ensure that the name contains only English letters or spaces, with no leading or trailing spaces and no consecutive spaces.')])),
                ('thumbnail', models.ImageField(unique=True, upload_to=common.utils.FileUploadPathGenerator(base_path=pathlib.PurePosixPath('category_thumbnails'), name_prefix='thumbnail'), validators=[common.validators.MaxFileSizeValidator(max_file_size=1048576), django.core.validators.FileExtensionValidator(('png',))])),
            ],
        ),
        migrations.CreateModel(
            name='SettingsStore',
            fields=[
                ('key', models.CharField(max_length=64, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[A-Z]+(?:_[A-Z]+)*$', 'Ensure that the key contains only uppercase English letters or underscores, with no leading or trailing underscores and no consecutive underscores.')])),
            ],
        ),
        migrations.CreateModel(
            name='WallpaperDimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', adminapp.fields.WallpaperDimensionField()),
                ('height', adminapp.fields.WallpaperDimensionField()),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('width', 'height'), name='unique_width_height')],
            },
        ),
    ]
